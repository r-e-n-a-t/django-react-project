{"ast":null,"code":"var _jsxFileName = \"/app/react-frontend/src/components/App/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Center, VStack, Grid, Stack, Button, useDisclosure } from \"@chakra-ui/react\";\nimport { ColourModeSwitcher } from \"../ColourModeSwitcher/colourModeSwitcher.js\";\nimport IntroText from \"../IntroText/introText.js\";\nimport GeneralConversionModal from \"../Modal/modal.js\";\n/**\r\n * The App! Starts here with different buttons to trigger conversion formats, which then go to modals\r\n * and then onto popovers before communciating with the backend\r\n * @returns App Component!\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [text, setText] = useState({\n    title: \"\",\n    body: \"\",\n    uploadInstruction: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Center, {\n    textAlign: \"center\",\n    fontSize: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      minH: \"100vh\",\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(ColourModeSwitcher, {\n        justifySelf: \"flex-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        children: [/*#__PURE__*/_jsxDEV(IntroText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"pink\",\n            variant: \"outline\",\n            onClick: () => {\n              onOpen();\n              setText({\n                title: \"Оставить комментарий\",\n                body: \"1Скажите, что вы думаете о Волчеке и GeekBrains?\",\n                uploadInstruction: \"Готово!\",\n                label: \"2Скажите, что вы думаете о Волчеке и GeekBrains?\",\n                pasteInstruction: \"3Скажите, что вы думаете о Волчеке и GeekBrains?\"\n              });\n            },\n            children: \"STIX 2 to elasticsearch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GeneralConversionModal, {\n            isOpen: isOpen,\n            onClose: onClose,\n            title: text.title,\n            body: text.body,\n            uploadInstruction: text.uploadInstruction,\n            requestType: text.requestType,\n            label: text.label,\n            pasteInstruction: text.pasteInstruction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"93Fgibow6TwV0/hY7tvWIkcfnKE=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/app/react-frontend/src/components/App/app.js"],"names":["React","useState","Center","VStack","Grid","Stack","Button","useDisclosure","ColourModeSwitcher","IntroText","GeneralConversionModal","App","isOpen","onOpen","onClose","text","setText","title","body","uploadInstruction","label","pasteInstruction","requestType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,aANF,QAOO,kBAPP;AAQA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,sBAAP,MAAmC,mBAAnC;AAEA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BP,aAAa,EAAjD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;AAC/BgB,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,iBAAiB,EAAE;AAHY,GAAD,CAAhC;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,QAAQ,EAAC,IAApC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,CAAC,EAAE,CAAtB;AAAA,8BACE,QAAC,kBAAD;AAAoB,QAAA,WAAW,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,WAAW,EAAC,MADd;AAEE,YAAA,OAAO,EAAC,SAFV;AAGE,YAAA,OAAO,EAAE,MAAM;AACbN,cAAAA,MAAM;AACNG,cAAAA,OAAO,CAAC;AACNC,gBAAAA,KAAK,EAAE,sBADD;AAENC,gBAAAA,IAAI,EAAE,kDAFA;AAGNC,gBAAAA,iBAAiB,EAAE,SAHb;AAINC,gBAAAA,KAAK,EAAE,kDAJD;AAKNC,gBAAAA,gBAAgB,EAAE;AALZ,eAAD,CAAP;AAOD,aAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE,QAAC,sBAAD;AACE,YAAA,MAAM,EAAET,MADV;AAEE,YAAA,OAAO,EAAEE,OAFX;AAGE,YAAA,KAAK,EAAEC,IAAI,CAACE,KAHd;AAIE,YAAA,IAAI,EAAEF,IAAI,CAACG,IAJb;AAKE,YAAA,iBAAiB,EAAEH,IAAI,CAACI,iBAL1B;AAME,YAAA,WAAW,EAAEJ,IAAI,CAACO,WANpB;AAOE,YAAA,KAAK,EAAEP,IAAI,CAACK,KAPd;AAQE,YAAA,gBAAgB,EAAEL,IAAI,CAACM;AARzB;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA9CuBV,G;UACcJ,a;;;KADdI,G","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Center,\r\n  VStack,\r\n  Grid,\r\n  Stack,\r\n  Button,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { ColourModeSwitcher } from \"../ColourModeSwitcher/colourModeSwitcher.js\";\r\nimport IntroText from \"../IntroText/introText.js\";\r\nimport GeneralConversionModal from \"../Modal/modal.js\";\r\n\r\n/**\r\n * The App! Starts here with different buttons to trigger conversion formats, which then go to modals\r\n * and then onto popovers before communciating with the backend\r\n * @returns App Component!\r\n */\r\nexport default function App() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [text, setText] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n    uploadInstruction: \"\",\r\n  });\r\n  return (\r\n    <Center textAlign=\"center\" fontSize=\"xl\">\r\n      <Grid minH=\"100vh\" p={3}>\r\n        <ColourModeSwitcher justifySelf=\"flex-end\" />\r\n        <VStack spacing={8}>\r\n          <IntroText />\r\n          <Stack>\r\n            <Button\r\n              colorScheme=\"pink\"\r\n              variant=\"outline\"\r\n              onClick={() => {\r\n                onOpen();\r\n                setText({\r\n                  title: \"Оставить комментарий\",\r\n                  body: \"1Скажите, что вы думаете о Волчеке и GeekBrains?\",\r\n                  uploadInstruction: \"Готово!\",\r\n                  label: \"2Скажите, что вы думаете о Волчеке и GeekBrains?\",\r\n                  pasteInstruction: \"3Скажите, что вы думаете о Волчеке и GeekBrains?\",\r\n                });\r\n              }}\r\n            >\r\n              STIX 2 to elasticsearch\r\n            </Button>\r\n\r\n            <GeneralConversionModal\r\n              isOpen={isOpen}\r\n              onClose={onClose}\r\n              title={text.title}\r\n              body={text.body}\r\n              uploadInstruction={text.uploadInstruction}\r\n              requestType={text.requestType}\r\n              label={text.label}\r\n              pasteInstruction={text.pasteInstruction}\r\n            />\r\n          </Stack>\r\n        </VStack>\r\n      </Grid>\r\n    </Center>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}