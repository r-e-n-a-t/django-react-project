{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\docker\\\\django-react-poc\\\\django-cti-react\\\\react-frontend\\\\src\\\\components\\\\Modal\\\\modal.js\";\nimport React from \"react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, Input } from \"@chakra-ui/react\";\nimport PopOverForm from \"../PopOver/popover.js\";\n/**\r\n * General modal popups for the different data conversions\r\n * @param {Object} props contains strings with instructions on what to show\r\n * @returns {React Component} one all purpose modal that can be modified for different props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GeneralConversionModal(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: props.isOpen,\n      onClose: props.onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(PopOverForm, {\n            uploadInstruction: props.uploadInstruction,\n            requestType: props.requestType,\n            label: props.label,\n            pasteInstruction: props.pasteInstruction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              stix: \"\"\n            },\n            onSubmit: (values, {\n              setSubmitting\n            }) => {\n              callAPI(values, props.label);\n              setSubmitting(false);\n            },\n            children: ({\n              values,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: props.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"stix\",\n                  name: \"stix\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.stix\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  children: props.pasteInstruction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                mt: 4,\n                colorScheme: \"teal\",\n                disabled: isSubmitting,\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: props.onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = GeneralConversionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralConversionModal\");","map":{"version":3,"sources":["C:/MAMP/htdocs/docker/django-react-poc/django-cti-react/react-frontend/src/components/Modal/modal.js"],"names":["React","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","Input","PopOverForm","GeneralConversionModal","props","isOpen","onClose","title","body","uploadInstruction","requestType","label","pasteInstruction","stix","values","setSubmitting","callAPI","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport PopOverForm from \"../PopOver/popover.js\";\r\n\r\n/**\r\n * General modal popups for the different data conversions\r\n * @param {Object} props contains strings with instructions on what to show\r\n * @returns {React Component} one all purpose modal that can be modified for different props\r\n */\r\nexport default function GeneralConversionModal(props) {\r\n  return (\r\n    <>\r\n      <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader >{props.title}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>{props.body}</ModalBody>\r\n          <ModalFooter>\r\n            <PopOverForm\r\n              uploadInstruction={props.uploadInstruction}\r\n              requestType={props.requestType}\r\n              label={props.label}\r\n              pasteInstruction={props.pasteInstruction}\r\n            />\r\n\r\n            <Formik\r\n              initialValues={{ stix: \"\" }}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                callAPI(values, props.label);\r\n                setSubmitting(false);\r\n              }}\r\n            >\r\n              {({ values, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <FormControl as=\"fieldset\">\r\n                    <FormLabel>{props.label}</FormLabel>\r\n                    <Input\r\n                      type=\"stix\"\r\n                      name=\"stix\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.stix}\r\n                    />\r\n                    <FormHelperText>{props.pasteInstruction}</FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    mt={4}\r\n                    colorScheme=\"teal\"\r\n                    disabled={isSubmitting}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={props.onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}