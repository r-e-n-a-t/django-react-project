{"ast":null,"code":"var _jsxFileName = \"/app/react-frontend/src/components/PopOver/popover.js\",\n    _s = $RefreshSig$();\n\nimport FocusLock from \"react-focus-lock\";\nimport { Button, Popover, PopoverTrigger, PopoverContent, useDisclosure, PopoverArrow, PopoverCloseButton } from \"@chakra-ui/react\";\nimport { useRef } from \"react\";\nimport ConversionForm from \"../Form/form.js\";\n/**\r\n * Pop Over for pasting the STIX and other data sources\r\n * @param {Object} props string data on different instructions for the form\r\n * @returns {React Component} different popover components for data conversion and download\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PopOverForm(props) {\n  _s();\n\n  const {\n    onOpen,\n    onClose,\n    isOpen\n  } = useDisclosure();\n  const firstFieldRef = useRef(null);\n  /**\r\n   * Handles connecting to django backend forgetting data from the database.\r\n   */\n\n  function handleClick() {\n    fetch(\"http://localhost:8000/api/comment/\").then(response => {\n      return response.json();\n    }).then(response => {\n      console.log(response);\n      alert(JSON.stringify(response));\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  if (props.uploadInstruction) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Popover, {\n        isOpen: isOpen,\n        initialFocusRef: firstFieldRef,\n        onOpen: onOpen,\n        onClose: onClose,\n        placement: \"right\",\n        closeOnBlur: false,\n        children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            d: \"inline-block\",\n            mr: 3,\n            children: props.uploadInstruction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n          p: 5,\n          children: /*#__PURE__*/_jsxDEV(FocusLock, {\n            returnFocus: true,\n            persistentFocus: false,\n            children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PopoverCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ConversionForm, {\n              label: props.label,\n              pasteInstruction: props.pasteInstruction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(PopOverForm, \"N45WS+2Wt9HHVvAeSkQYEBqXjZw=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = PopOverForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopOverForm\");","map":{"version":3,"sources":["/app/react-frontend/src/components/PopOver/popover.js"],"names":["FocusLock","Button","Popover","PopoverTrigger","PopoverContent","useDisclosure","PopoverArrow","PopoverCloseButton","useRef","ConversionForm","PopOverForm","props","onOpen","onClose","isOpen","firstFieldRef","handleClick","fetch","then","response","json","console","log","alert","JSON","stringify","catch","error","uploadInstruction","label","pasteInstruction"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,kBAPF,QAQO,kBARP;AASA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AAEA;AACA;AACA;AACA;AACA;;;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA8BT,aAAa,EAAjD;AACA,QAAMU,aAAa,GAAGP,MAAM,CAAC,IAAD,CAA5B;AAEA;AACF;AACA;;AACE,WAASQ,WAAT,GAAuB;AACrBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISC,QAAD,IAAc;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAD,CAAL;AACD,KAPH,EAQGO,KARH,CAQUC,KAAD,IAAW;AAChBN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD,KAVH;AAWD;;AACD,MAAIhB,KAAK,CAACiB,iBAAV,EAA6B;AAC3B,wBACE;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,MAAM,EAAEd,MADV;AAEE,QAAA,eAAe,EAAEC,aAFnB;AAGE,QAAA,MAAM,EAAEH,MAHV;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAC,OALZ;AAME,QAAA,WAAW,EAAE,KANf;AAAA,gCAQE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,CAAC,EAAC,cAAV;AAAyB,YAAA,EAAE,EAAE,CAA7B;AAAA,sBACGF,KAAK,CAACiB;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,cAAD;AAAgB,UAAA,CAAC,EAAE,CAAnB;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,WAAW,MAAtB;AAAuB,YAAA,eAAe,EAAE,KAAxC;AAAA,oCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,cAAD;AACE,cAAA,KAAK,EAAEjB,KAAK,CAACkB,KADf;AAEE,cAAA,gBAAgB,EAAElB,KAAK,CAACmB;AAF1B;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA4BD;AACF;;GAlDuBpB,W;UACcL,a;;;KADdK,W","sourcesContent":["import FocusLock from \"react-focus-lock\";\r\nimport {\r\n  Button,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useDisclosure,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { useRef } from \"react\";\r\nimport ConversionForm from \"../Form/form.js\";\r\n\r\n/**\r\n * Pop Over for pasting the STIX and other data sources\r\n * @param {Object} props string data on different instructions for the form\r\n * @returns {React Component} different popover components for data conversion and download\r\n */\r\nexport default function PopOverForm(props) {\r\n  const { onOpen, onClose, isOpen } = useDisclosure();\r\n  const firstFieldRef = useRef(null);\r\n\r\n  /**\r\n   * Handles connecting to django backend forgetting data from the database.\r\n   */\r\n  function handleClick() {\r\n    fetch(\"http://localhost:8000/api/comment/\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert(JSON.stringify(response));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  if (props.uploadInstruction) {\r\n    return (\r\n      <>\r\n        <Popover\r\n          isOpen={isOpen}\r\n          initialFocusRef={firstFieldRef}\r\n          onOpen={onOpen}\r\n          onClose={onClose}\r\n          placement=\"right\"\r\n          closeOnBlur={false}\r\n        >\r\n          <PopoverTrigger>\r\n            <Button d=\"inline-block\" mr={3}>\r\n              {props.uploadInstruction}\r\n            </Button>\r\n          </PopoverTrigger>\r\n          <PopoverContent p={5}>\r\n            <FocusLock returnFocus persistentFocus={false}>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <ConversionForm\r\n                label={props.label}\r\n                pasteInstruction={props.pasteInstruction}\r\n              />\r\n            </FocusLock>\r\n          </PopoverContent>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}