{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\docker\\\\django-react-poc\\\\django-cti-react\\\\react-frontend\\\\src\\\\components\\\\App\\\\app.js\";\nimport React, { useState } from \"react\";\nimport { Center, VStack, Grid, Stack, Button, useDisclosure } from \"@chakra-ui/react\";\nimport { ColourModeSwitcher } from \"../ColourModeSwitcher/colourModeSwitcher.js\";\nimport IntroText from \"../IntroText/introText.js\";\nimport InitialFocus from \"../Modal/modal.js\";\nimport GridBlurredBackdrop from \"../Testimonials/testimonials.js\";\n/**\r\n * The App! Starts here with different buttons to trigger conversion formats, which then go to modals\r\n * and then onto popovers before communciating with the backend\r\n * @returns App Component!\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Center, {\n    textAlign: \"center\",\n    fontSize: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(ColourModeSwitcher, {\n      justifySelf: \"flex-end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(IntroText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(InitialFocus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/MAMP/htdocs/docker/django-react-poc/django-cti-react/react-frontend/src/components/App/app.js"],"names":["React","useState","Center","VStack","Grid","Stack","Button","useDisclosure","ColourModeSwitcher","IntroText","InitialFocus","GridBlurredBackdrop","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,aANF,QAOO,kBAPP;AAQA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,QAAQ,EAAC,IAApC;AAAA,4BAEI,QAAC,kBAAD;AAAoB,MAAA,WAAW,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAjB;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAfuBA,G","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Center,\r\n  VStack,\r\n  Grid,\r\n  Stack,\r\n  Button,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { ColourModeSwitcher } from \"../ColourModeSwitcher/colourModeSwitcher.js\";\r\nimport IntroText from \"../IntroText/introText.js\";\r\nimport InitialFocus from \"../Modal/modal.js\";\r\nimport GridBlurredBackdrop from \"../Testimonials/testimonials.js\";\r\n/**\r\n * The App! Starts here with different buttons to trigger conversion formats, which then go to modals\r\n * and then onto popovers before communciating with the backend\r\n * @returns App Component!\r\n */\r\nexport default function App() {\r\n  return (\r\n    <Center textAlign=\"center\" fontSize=\"xl\">\r\n       {/* <Grid minH=\"100vh\" p={3}> */}\r\n        <ColourModeSwitcher justifySelf=\"flex-end\" />\r\n        <VStack spacing={8}>\r\n          <IntroText />\r\n          <Stack>\r\n            <InitialFocus/>\r\n          </Stack>\r\n        </VStack>\r\n      {/* </Grid> */}\r\n     </Center>\r\n    \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}