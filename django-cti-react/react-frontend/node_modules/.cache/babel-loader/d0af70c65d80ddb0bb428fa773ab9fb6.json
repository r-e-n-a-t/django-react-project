{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\docker\\\\django-react-poc\\\\django-cti-react\\\\react-frontend\\\\src\\\\components\\\\Form\\\\form.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { FormLabel, Input, FormHelperText, FormControl, Button } from \"@chakra-ui/react\";\n/**\r\n * Form for submitting data for converison\r\n * @param {Object} props string data on what should be in the form, instructions\r\n * @returns {React Component} the form that is part of the popover\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConversionForm(props) {\n  /**\r\n   * Makes POST requests to the backend where the data is converted in python\r\n   * @param {string} formdata data to convert\r\n   * @param {String} label instruction used in the backend for control flow of different data types\r\n   */\n  function callAPI(formdata, label) {\n    formdata.label = label;\n    fetch(\"http://localhost:8000/backend/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formdata)\n    }).then(response => {\n      return response.json();\n    }).then(response => {\n      console.log(response);\n      alert(JSON.stringify(response));\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      stix: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      callAPI(values, props.label);\n      setSubmitting(false);\n    },\n    children: ({\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        as: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"stix\",\n          name: \"stix\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.stix\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: props.pasteInstruction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mt: 4,\n        colorScheme: \"teal\",\n        disabled: isSubmitting,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = ConversionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversionForm\");","map":{"version":3,"sources":["C:/MAMP/htdocs/docker/django-react-poc/django-cti-react/react-frontend/src/components/Form/form.js"],"names":["React","Formik","FormLabel","Input","FormHelperText","FormControl","Button","ConversionForm","props","callAPI","formdata","label","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","console","log","alert","catch","error","stix","values","setSubmitting","handleChange","handleBlur","handleSubmit","isSubmitting","pasteInstruction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,MALF,QAMO,kBANP;AAQA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE5C;AACF;AACA;AACA;AACA;AACE,WAASC,OAAT,CAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AAChCD,IAAAA,QAAQ,CAACC,KAAT,GAAiBA,KAAjB;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AANgC,KAAnC,CAAL,CAQGS,IARH,CAQSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAVH,EAWGF,IAXH,CAWSC,QAAD,IAAc;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAACP,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAD,CAAL;AACD,KAdH,EAeGK,KAfH,CAeUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,KAjBH;AAkBD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADjB;AAEE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCpB,MAAAA,OAAO,CAACmB,MAAD,EAASpB,KAAK,CAACG,KAAf,CAAP;AACAkB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KALH;AAAA,cAOG,CAAC;AAAED,MAAAA,MAAF;AAAUE,MAAAA,YAAV;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA;AAAlD,KAAD,kBACC;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,UAAhB;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYxB,KAAK,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEmB,YAHZ;AAIE,UAAA,MAAM,EAAEC,UAJV;AAKE,UAAA,KAAK,EAAEH,MAAM,CAACD;AALhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE,QAAC,cAAD;AAAA,oBAAiBnB,KAAK,CAAC0B;AAAvB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,MAAD;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,QAAQ,EAAED,YAHZ;AAIE,QAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;KA9DuB1B,c","sourcesContent":["import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  FormLabel,\r\n  Input,\r\n  FormHelperText,\r\n  FormControl,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\n/**\r\n * Form for submitting data for converison\r\n * @param {Object} props string data on what should be in the form, instructions\r\n * @returns {React Component} the form that is part of the popover\r\n */\r\nexport default function ConversionForm(props) {\r\n\r\n  /**\r\n   * Makes POST requests to the backend where the data is converted in python\r\n   * @param {string} formdata data to convert\r\n   * @param {String} label instruction used in the backend for control flow of different data types\r\n   */\r\n  function callAPI(formdata, label) {\r\n    formdata.label = label\r\n    fetch(\"http://localhost:8000/backend/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formdata),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert(JSON.stringify(response));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ stix: \"\" }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        callAPI(values, props.label);\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <FormControl as=\"fieldset\">\r\n            <FormLabel>{props.label}</FormLabel>\r\n            <Input\r\n              type=\"stix\"\r\n              name=\"stix\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.stix}\r\n            />\r\n            <FormHelperText>{props.pasteInstruction}</FormHelperText>\r\n          </FormControl>\r\n          <Button\r\n            mt={4}\r\n            colorScheme=\"teal\"\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}